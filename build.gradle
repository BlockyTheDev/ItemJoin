plugins {
    id "java"
    id "maven"
    id "maven-publish"
    id "net.minecrell.licenser" version "0.4.1"
    id "com.github.johnrengelman.shadow" version "6.0.0"
}

group "me.RockinChaos.itemjoin"
version "5.1.1-${System.getProperty("BUILD_NUMBER")}"

description "Custom items"

repositories {

     maven { url "https://hub.spigotmc.org/nexus/content/repositories/snapshots/" }
     maven { url "http://repo.extendedclip.com/content/repositories/placeholderapi/" }
     maven { url "http://repo.codemc.org/repository/maven-public/" }
     maven { url "https://libraries.minecraft.net/" }
     maven { url "https://repo.codemc.org/repository/maven-public" }
     maven { url "https://raw.githubusercontent.com/TeamVK/maven-repository/master/release/" }
     maven { url "https://repo.codemc.org/repository/maven-snapshots/" }
     maven { url "https://maven.enginehub.org/repo/" }
     maven { url "https://ci.ender.zone/plugin/repository/everything/net/milkbowl/vault/" }
     maven { url "https://repo.citizensnpcs.co/" }
     maven { url "https://repo.jeff-media.de/maven2" }
     maven { url "https://raw.githubusercontent.com/RockinChaos/repository/maven-public/" }
     maven { url "https://repo.maven.apache.org/maven2" }
}

dependencies {
    compile group: 'commons-lang', name: 'commons-lang', version:'2.6'
    compile group: 'com', name: 'skinsrestorer', version:'13.8.2-SNAPSHOT'
    compile group: 'com.zaxxer', name: 'HikariCP', version:'LATEST'
    compileOnly group: 'io.netty', name: 'netty-all', version:'4.1.42.Final'
    compileOnly group: 'org.spigotmc', name: 'spigot-api', version:'1.16.4-R0.1-SNAPSHOT'
    compileOnly group: 'me.clip', name: 'placeholderapi', version:'2.10.4'
    compileOnly group: 'fr.xephi', name: 'authme', version:'5.6.0-SNAPSHOT'
    compileOnly group: 'net.milkbowl.vault', name: 'VaultAPI', version:'1.7'
    compileOnly group: 'com.github.shynixn.headdatabase', name: 'hdb-api', version:'1.0'
    compileOnly group: 'com.vk2gpz.tokenenchant', name: 'TokenEnchantAPI', version:'18.0.2'
    compileOnly group: 'net.citizensnpcs', name: 'citizens', version:'2.0.27-SNAPSHOT'
    compileOnly group: 'de.jeff_media', name: 'ChestSortAPI', version:'2.0.0'
    compileOnly group: 'com.mojang', name: 'authlib', version:'1.5.21'
    compileOnly group: 'org.bstats', name: 'bstats-bukkit', version:'1.4'
    compileOnly group: 'commons-io', name: 'commons-io', version:'2.7'
    compileOnly group: 'org.apache.logging.log4j', name: 'log4j-api', version:'2.13.3'
    compileOnly group: 'com.googlecode.json-simple', name: 'json-simple', version:'1.1.1'
    compileOnly group: 'com.google.guava', name: 'guava', version:'29.0-jre'
    compileOnly group: 'de.domedd.betternick', name: 'BetterNick', version:'7.4-SNAPSHOT'
    compileOnly group: 'com.sk89q.worldguard', name: 'worldguard-bukkit', version:'7.0.4-SNAPSHOT'
    compileOnly group: 'com.sk89q.worldedit', name: 'worldedit-bukkit', version:'7.2.0-SNAPSHOT'
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        filter org.apache.tools.ant.filters.ReplaceTokens, tokens: [name: rootProject.name, version: project.version.toString(), description: project.description]
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    withJavadocJar()
    withSourcesJar()
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

tasks.withType(Javadoc) {
    failOnError false
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}

shadowJar {
    archiveClassifier.set("")
}

license {
    include '**/*.java'

    matching('**/*.java') {
        header = file('config/headers/main.txt')
    }

    matching('**/JSONMessage.java') {
        header = file('config/headers/jsonmessage.txt')
    }

    ext {
        year = 2020
    }
}

test {
    useJUnitPlatform()
}

sourceSets {
    test.compileClasspath += configurations.compileOnly
    test.runtimeClasspath += configurations.compileOnly
}