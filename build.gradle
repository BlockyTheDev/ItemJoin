plugins {
    id "java"
    id "maven-publish"
    id "net.minecrell.licenser" version "0.4.1"
    id "com.github.johnrengelman.shadow" version "6.0.0"
}

group "me.clip"
version "v5.1.1-${System.getProperty("BUILD_NUMBER")}"

description "Custom items"

repositories {
    mavenCentral()

    maven({ url = "https://repo.codemc.org/repository/maven-public" })
    maven({ url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/" })
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:1.16.4-R0.1-SNAPSHOT"
    compileOnly "org.jetbrains:annotations:19.0.0"
    compileOnly "io.netty:netty-all:4.1.42.Final"
	compileOnly "commons-lang:commons-lang:2.6"
	compileOnly "org.spigotmc:spigot-api:1.16.4-R0.1-SNAPSHOT"
	compileOnly "me.clip:placeholderapi:2.10.4"
	compileOnly "fr.xephi:authme:5.6.0-SNAPSHOT"
	compileOnly "net.milkbowl.vault:VaultAPI:1.7"
	compileOnly "com.github.shynixn.headdatabase:hdb-api:1.0"
	compileOnly "com.vk2gpz.tokenenchant:TokenEnchantAPI:18.0.2"
	compileOnly "com:skinsrestorer:13.8.2-SNAPSHOT"
	compileOnly "net.citizensnpcs:citizens:2.0.27-SNAPSHOT"
	compileOnly "de.jeff_media:ChestSortAPI:2.0.0"
	compileOnly "com.mojang:authlib:1.5.21"
	compileOnly "org.bstats:bstats-bukkit:1.4"
	compileOnly "commons-io:commons-io:2.7"
	compileOnly "org.apache.logging.log4j:log4j-api:2.13.3"
	compileOnly "com.googlecode.json-simple:json-simple:1.1.1"
	compileOnly "com.google.guava:guava:29.0-jre"
	compileOnly "com.zaxxer:HikariCP:LATEST"
	compileOnly "de.domedd.betternick:BetterNick:7.4-SNAPSHOT"
	compileOnly "com.sk89q.worldguard:worldguard-bukkit:7.0.4-SNAPSHOT"
	compileOnly "com.sk89q.worldedit:worldedit-bukkit:7.2.0-SNAPSHOT"
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        filter org.apache.tools.ant.filters.ReplaceTokens, tokens: [name: rootProject.name, version: project.version.toString(), description: project.description]
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    withJavadocJar()
    withSourcesJar()
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

tasks.withType(Javadoc) {
    failOnError false
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}

shadowJar {
    archiveClassifier.set("")
    
}

license {
    include '**/*.java'

    matching('**/*.java') {
        header = file('config/headers/main.txt')
    }

    matching('**/JSONMessage.java') {
        header = file('config/headers/jsonmessage.txt')
    }

    ext {
        year = 2020
    }
}

test {
    useJUnitPlatform()
}

sourceSets {
    test.compileClasspath += configurations.compileOnly
    test.runtimeClasspath += configurations.compileOnly
}

publishing {
    repositories {
        maven {
            if (version.contains("-DEV-")) {
                url = uri("https://craftationgaming.com.com/content/repositories/dev/")
            } else {
                url = uri("https://craftationgaming.com/content/repositories/itemjoin/")
            }

            credentials {
                username = System.getenv("JENKINS_USER")
                password = System.getenv("JENKINS_PASS")
            }
        }
    }

    publications {
        mavenJava(MavenPublication) {
            artifactId = "itemjoin"

            from components.java

            pom.withXml {

                // some are having issues with bstats so we might need to add that to the pom as well

                asNode().appendNode("packaging", "jar")
                asNode().remove(asNode().get("dependencies"))

                def dependenciesNode = asNode().appendNode("dependencies")
                // jetbrains annotations
                def jetbrainsAnnotations = dependenciesNode.appendNode("dependency")
                jetbrainsAnnotations.appendNode("groupId", "org.jetbrains")
                jetbrainsAnnotations.appendNode("artifactId", "annotations")
                jetbrainsAnnotations.appendNode("version", "19.0.0")
            }
        }
    }
}

publish.dependsOn clean, test, jar